@using Cobit_19.Business.FocusAreas;
@using Cobit_19.Shared.Dtos;
@using Cobit_19.Shared.Enums;
@inject FocusAreaProvider focusAreaProvider

@code {
    [Parameter]
    public string userID { get; set; }
    [Parameter]
    public int focusAreaID { get; set; }
    protected IEnumerable<AuditDto> audits;
    protected int rowCounter = 1;

    protected override void OnParametersSet()
    {
        LoadAudits();
    }

    private void LoadAudits()
    {
        audits = focusAreaProvider.GetAuditsForFocusAreaByUserID(userID, focusAreaID);
        StateHasChanged();
    }

    private string FormatAuditStatus(AuditStatus status)
    {
        if (status == AuditStatus.NotStarted)
        {
            return "Not Started";
        }
        else if (status == AuditStatus.InProgress)
        {
            return "In Progress";
        }
        else if (status == AuditStatus.Completed)
        {
            return "Completed";
        }
        else
        {
            return null;
        }
    }
}

<table class="table border-3 table-bordered">
    <tr>
        <th>#</th>
        <th>Status</th>
        <th>Name</th>
        <th>Date Created</th>
    </tr>

    @foreach(var audit in audits)
    {
        <tr>
            <td>@(rowCounter++)</td>
            <td>@FormatAuditStatus(audit.Status)</td>
            <td>@audit.Name</td>
            <td>@audit.DateCreated</td>
            <td><button>Select</button></td>
        </tr>
    }
</table>


