@page "/DesignFactor"
@using Cobit_19.Business.Audits
@using Cobit_19.Shared.Dtos
@inject AuditProvider auditProvider

@code {
    protected int auditId = 1;
    protected DesignFactorDto _designFactorDto;

    protected override async Task OnInitializedAsync()
    {
        if(_designFactorDto == null)
        {
            _designFactorDto = await auditProvider.getDesignFactorFullAsync(1, 1);
        }
    }

    private void Submit(int questionId, ChangeEventArgs args)
    {
        int answ = -1;
        if (int.TryParse(args.Value.ToString(), out answ))
        {
            UpdateAnswer(auditId, questionId, answ);
        }
    }

    private async void UpdateAnswer(int AuditId, int QuestionId, int Answer, int Odds=0)
    {
        AnswerEditorDto answerEditorDto = new AnswerEditorDto()
            {
                AuditID = AuditId,
                QuestionID = QuestionId,
                Answer = Answer,
                Odds = Odds
            };

        await auditProvider.updateAnswerAsync(answerEditorDto);
    }

    private bool IsAnswerSelected(int answer, int option)
    {
        return answer == option;
    }
}

<div class="container-md bg-light mt-4">
    <div class="row">
        <div class="col-lg-9">
            @if (_designFactorDto is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <div>
                    <h3> Design Factor : @_designFactorDto.Description</h3>
                </div>
                <table class="table table-responsive-md">
                    <thead class="table-primary">
                        <tr>
                            <th>Description</th>
                            @if (_designFactorDto.Questions.First().Answers.First().Odds == 0)
                            {
                                @if (_designFactorDto.Questions.First().Answers.First().AnswerRange <= 8)
                                {
                                    @for (int i = 1; i <= _designFactorDto.Questions.First().Answers.First().AnswerRange; i++)
                                    {
                                        <th>@i</th>
                                    }
                                }
                                else if (_designFactorDto.Questions.First().Answers.First().AnswerRange == 100)
                                {
                                    <th>Value(%)</th>
                                }
                                else
                                {
                                    <th>Value(1 - @_designFactorDto.Questions.First().Answers.First().AnswerRange)</th>
                                }
                            }
                            else
                            {
                                <th>Value(1 - @_designFactorDto.Questions.First().Answers.First().AnswerRange)</th>
                                <th>Value(1 - @_designFactorDto.Questions.First().Answers.First().AnswerRange)</th>
                            }
                            <th>Baseline</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var q in _designFactorDto.Questions)
                        {
                            <tr>
                                <td>
                                    @q.Question
                                </td>
                                @if (_designFactorDto.Questions.First().Answers.First().Odds == 0)
                                {

                                    @if (q.Answers.First().AnswerRange <= 8)
                                    {
                                        @for (int i = 1; i <= q.Answers.First().AnswerRange; i++)
                                        {
                                            <td>
                                                <input type="radio" name="@q.ID" id="@q.ID" value="@i"
                                                class="form-check-input"
                                                @onchange="((e) => Submit(q.ID, e))"
                                                checked="@IsAnswerSelected(q.Answers.First().Answer, i)" />
                                            </td>
                                        }
                                    }
                                    else
                                    {
                                        <td>
                                            <input type="number" name="@q.ID" id="@q.ID" min="0" max="@q.Answers.First().AnswerRange" value="@q.Answers.First().Answer"
                                            class="form-control"
                                            @onchange="((e) => Submit(q.ID, e))" />
                                        </td>
                                    }
                                }
                                else
                                {
                                    <td>
                                        <input type="number" name="@q.ID" id="@q.ID" min="0" max="@q.Answers.First().AnswerRange" value="@q.Answers.First().Answer"
                                               class="form-control"
                                        @onchange="((e) => {})" />
                                    </td>
                                    <td>
                                        <input type="number" name="@q.ID" id="@q.ID" min="0" max="@q.Answers.First().AnswerRange" value="@q.Answers.First().Odds"
                                               class="form-control"
                                        @onchange="((e) => {})" />
                                    </td>
                                }
                                <td>
                                    @q.BaseAnswer
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

