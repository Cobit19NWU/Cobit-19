
@using Cobit_19.Shared.Dtos;
@using Microsoft.AspNetCore.Identity
@using Cobit_19.Data.Models
@using Cobit_19.Business.Admin
@inject AuthenticationStateProvider authStateProvider
@inject IServiceProvider serviceProvider

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <li class="nav-header">
                <div class="dropdown profile-element text-center">
                    <img alt="image" class="rounded-circle text-center" src="images/CobitLogo.jpg" />
                </div>
                <div>
                    <h6 class="text-light text-center">@firstName @lastName</h6>
                    <h6 class="text-light text-center">@userRole</h6>
                </div>
                <div></div>
                <hr />
            </li>
            <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
            <NavLink class="nav-link" href="/Guide">
                <span class="oi oi-document" aria-hidden="true"></span> Assessment Guides
            </NavLink>
        </div>
        <AuthorizeView Roles="Administrator">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="/UserManagement">
                <span class="oi oi-person" aria-hidden="true"></span> Manage Users
            </NavLink>    
        </div>
        </AuthorizeView>
    </nav>
</div>

@code {
    private bool collapseNavMenu = true;

    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private string? firstName;
    private string? lastName;
    private string? userRole;
    private string userID;
    private UserDto userDto;

    protected async override Task OnInitializedAsync()
    {
        var scope = serviceProvider.CreateScope();
        var userManagementProvider = scope.ServiceProvider.GetRequiredService<UserManagementProvider>();


        var authState = await authStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            (firstName, lastName) = await userManagementProvider.getUserRealNameAsync(user);
        }
        userID = await userManagementProvider.getUserIDAsync(user);
        userDto = await userManagementProvider.GetUserDtoByIdAsync(userID);

        userRole = await userManagementProvider.getUserRoleAsync(userDto);
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
}
