@page "/ObjectiveAuditScope"

@using Cobit_19.Business.Admin;
@using Cobit_19.Business.ObjectiveAudits;
@using Cobit_19.Shared.Dtos;
@using Cobit_19.Shared.Enums;
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.WebUtilities
@inject ObjectiveAuditProvider objectiveAuditProvider
@inject NavigationManager navigationManager

@code {
    private IList<ObjectiveAuditDto>? _objectiveAuditDto { get; set; }
    private IList<UserDto>? _userDtos { get; set; }

    [Parameter]
    [SupplyParameterFromQuery]
    public int AuditId { get; set; }

    private int rowCounter;

    protected override async Task OnInitializedAsync()
    {
        if (_objectiveAuditDto == null)
        {
            _objectiveAuditDto = objectiveAuditProvider.getAll(AuditId);
        }
        rowCounter = 1;
    }

    private async Task Update(int id, ChangeEventArgs e)
    {
        var objectiveAudit = _objectiveAuditDto.FirstOrDefault(q => q.ID == id);

        if (objectiveAudit != null)
        {
            objectiveAudit.Selected = (bool)e.Value;

            ObjectiveAuditEditorDto objectiveAuditEditorDto = new ObjectiveAuditEditorDto
            {
                ID = objectiveAudit.ID,
                ApplicationUserID = objectiveAudit.ApplicationUserID,
                Selected = objectiveAudit.Selected,
                Status = objectiveAudit.Status
            };

            await objectiveAuditProvider.updateSelectedAuditAsync(objectiveAuditEditorDto);
        }
    }

    private void AuditSelectionClick(int objectiveAuditID)
    {
        var queryStrDict = new Dictionary<string, string>
            {
                ["AuditId"] = (AuditId).ToString(),
                ["ObjectiveAuditID"] = (objectiveAuditID).ToString(),
            };
        navigationManager.NavigateTo(
            QueryHelpers.AddQueryString("/ObjectiveAuditMembers", queryStrDict)
        );
    }

    private void NavButtonPress()
    {
        var queryStrDict = new Dictionary<string, string>
            {
                ["AuditId"] = (AuditId).ToString(),
            };
        navigationManager.NavigateTo(
            QueryHelpers.AddQueryString("/Audit", queryStrDict)
        );
    }
}


<div class="container-sm">
    <div class="row">
        <div class="col-md-12">
            @if (_objectiveAuditDto is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <table class="table table-hover table-striped">
                    <thead style="">
                        <tr>
                            <th colspan="6">
                                <div class="ibox-title">
                                    <h5>
                                        <strong>Scope Selection</strong>
                                    </h5>
                                </div>
                            </th>
                        </tr>
                        <tr>
                            <th style="background-color: purple; color: white;">#</th>
                            <th style="background-color: purple; color: white;">Status</th>
                            <th style="background-color: purple; color: white;">Objective</th>
                            <th style="background-color: purple; color: white;">Importance</th>
                            <th style="background-color: purple; color: white;">Selected</th>
                            <th style="background-color: purple; color: white;">Memebers</th>
                            <th style="background-color: purple; color: white;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var objectiveAudit in _objectiveAuditDto)
                        {
                            <tr>
                                <td>@(_objectiveAuditDto.IndexOf(objectiveAudit) + 1)</td>
                                <td>
                                    @if (objectiveAudit.Status == AuditStatus.Completed)
                                    {
                                        <span class="badge bg-success">Completed</span>
                                    }
                                    else if (objectiveAudit.Status == AuditStatus.InProgress)
                                    {
                                        <span class="badge bg-primary">In Progress</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Not Started</span>
                                    }
                                </td>
                                <td>@objectiveAudit.Objective.Name</td>
                                <td>3</td>
                                <td>
                                    <input type="checkbox" id="@objectiveAudit.ID" checked="@objectiveAudit.Selected"
                                    @onchange="((e) => Update(objectiveAudit.ID, e))" />
                                </td>
                                <td>
                                    @if (objectiveAudit.Selected)
                                    {
                                        <button type="button" class="btn btn-primary btn-sm" @onclick='() => AuditSelectionClick(objectiveAudit.ID)'>Select</button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }

            <div class="row">
                <div class="col">
                    <button type="button" onclick="@(() => NavButtonPress())" class="btn btn-primary">Done</button>
                </div>
            </div>
        </div>
    </div>
</div>
