
@using Cobit_19.Shared.Dtos
@using Cobit_19.Business.ObjectiveAudits
@inject ObjectiveAuditProvider objectiveAuditProvider

@code {
    [Parameter]
    public FullObjectiveAuditDto auditJSON { get; set; }

    [Parameter]
    public int componentID { get; set; }

    [Parameter]
    public int subComponentID { get; set; }

    [Parameter]
    public int objectiveAuditId { get; set; }

    public List<ComponentQuestionDto>? compQuestions;
    public List<SubComponentQuestionDto>? subCompQuestions;
    public SubComponentDto subComponent;
    public ComponentDto component;
    public List<SubComponentQuestionDto> MLevelQuestions;
    public List<SubComponentQuestionDto> relatedGuidanceQuestions;
    public List<SubComponentQuestionDto> inputQuestions;
    public List<SubComponentQuestionDto> outputQuestions;
    public string auditJsonString;


    protected override void OnInitialized()
    {
        if (subComponentID != -1)
        {
            subComponent = auditJSON.components[componentID].subComponents[subComponentID];
            subCompQuestions = subComponent.subComponentQuestions;
            MLevelQuestions = objectiveAuditProvider.GetSubComponentMLevelQuestions(subComponent);
            relatedGuidanceQuestions = objectiveAuditProvider.GetSubComponentRelatedGuidanceQuestions(subComponent);
            inputQuestions = objectiveAuditProvider.GetSubComponentInputQuestions(subComponent);
            outputQuestions = objectiveAuditProvider.GetSubComponentOutputQuestions(subComponent);
            component = auditJSON.components[componentID];
        }
        else
        {
            component = auditJSON.components[componentID];
            compQuestions = component.componentQuestions;
        }
    }

    private void updateComponent(ChangeEventArgs e, ComponentQuestionDto compQuestion = null, SubComponentQuestionDto subCompQuestion = null)
    {

        if (subCompQuestion != null)
        {
            updateSubCompQuestion(subCompQuestion, e);
        }
        else
        {
            updateCompQuestion(compQuestion, e);
        }

        if (componentID == 2)
        {
            ComponentDto infoFlowComp = auditJSON.components[4];
            double processCompFinalPerc = objectiveAuditProvider.calculateFinalProcessComponentScore(component, infoFlowComp);
            component.componentPercFinal = processCompFinalPerc;
        }
        else if (subComponentID != -1)
        {
            double finalPerc = objectiveAuditProvider.calculateComponentScore(component, true).Item3;
            component.componentPercFinal = finalPerc;
        }
        else
        {
            double finalPerc = objectiveAuditProvider.calculateComponentScore(component, false).Item3;
            component.componentPercFinal = finalPerc;
        }

        List<string> MLevels = new List<string> { "Maturity Level 1", "Maturity Level 2", "Maturity Level 3", "Maturity Level 4", "Maturity Level 5" };

        foreach (string MLevel in MLevels)
        {
            double finalMaturityLevelPerc = objectiveAuditProvider.calculateFinalMaturityLevelPercs(auditJSON, MLevel);

            if (MLevel == "Maturity Level 1")
            {
                auditJSON.maturityLevel1PercFinal = finalMaturityLevelPerc;
            }
            else if (MLevel == "Maturity Level 2")
            {
                auditJSON.maturityLevel2PercFinal = finalMaturityLevelPerc;
            }
            else if (MLevel == "Maturity Level 3")
            {
                auditJSON.maturityLevel3PercFinal = finalMaturityLevelPerc;
            }
            else if (MLevel == "Maturity Level 4")
            {
                auditJSON.maturityLevel4PercFinal = finalMaturityLevelPerc;
            }
            else if (MLevel == "Maturity Level 5")
            {
                auditJSON.maturityLevel5PercFinal = finalMaturityLevelPerc;
            }
        }

        auditJSON.maturityLevel = objectiveAuditProvider.CalculateFinalMaturityLevel(auditJSON);

        auditJsonString = AuditJSONParsingService.auditTemplateSerializer(auditJSON);

        objectiveAuditProvider.updateAuditJSON(objectiveAuditId, auditJsonString);

        StateHasChanged();
    }

    private void updateSubCompQuestion(SubComponentQuestionDto subCompQuestion, ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            subCompQuestion.questionAnswer = int.Parse(e.Value.ToString());
            subCompQuestion.questionScore = objectiveAuditProvider.calculateAnswerScore(subCompQuestion.questionAnswer);
        }
    }

    private void updateCompQuestion(ComponentQuestionDto compQuestion, ChangeEventArgs e)
    {
        if (e.Value is not null)
        {
            compQuestion.questionAnswer = int.Parse(e.Value.ToString());
            compQuestion.questionScore = objectiveAuditProvider.calculateAnswerScore(compQuestion.questionAnswer);


        }

    }

}

<div class="container">
    @if (componentID == 0)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateSubComponentScore(subCompQuestions).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Enterprise Goal</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < subCompQuestions.Count; i++)
                {
                    SubComponentQuestionDto subCompQuestion = subCompQuestions[i];
                    <tr>
                        <td>@subCompQuestion.questionDescription</td>
                        <td>
                            <select name="answer" value="@subCompQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, subCompQuestion: subCompQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@subCompQuestion.questionScore</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (componentID == 1)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateSubComponentScore(subCompQuestions).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Alignment Goal</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < subCompQuestions.Count; i++)
                {
                    SubComponentQuestionDto subCompQuestion = subCompQuestions[i];
                    <tr>
                        <td>@subCompQuestion.questionDescription</td>
                        <td>
                            <select name="answer" value="@subCompQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, subCompQuestion: subCompQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(subCompQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(subCompQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (componentID == 2)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateSubComponentScore(MLevelQuestions).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Level</th>
                    <th>Management Practices (MP) and Metrics to measure the achievement of the Management Practices (MP): </th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < MLevelQuestions.Count; i++)
                {
                    SubComponentQuestionDto MLevelQuestion = MLevelQuestions[i];
                    <tr>
                        <td>@MLevelQuestion.questionType</td>
                        <td>@MLevelQuestion.questionDescription</td>
                        <td>
                            <select name="answer" value="@MLevelQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, subCompQuestion: MLevelQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(MLevelQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(MLevelQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(MLevelQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(MLevelQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(MLevelQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        @if (relatedGuidanceQuestions != null)
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Related Guidance</th>
                            <th>Detailed Reference</th>
                            <th>Importance</th>
                            <th>N (Not achieved)</th>
                            <th>P (Partially achieved)</th>
                            <th>L (Largely achieved)</th>
                            <th>F (Fully achieved)</th>
                            <th>Score</th>
                            <th>Comment</th>
                        </tr>
                    </thead>

                    <tbody>
                        @for (int i = 0; i < relatedGuidanceQuestions.Count; i++)
                        {
                            SubComponentQuestionDto relatedGuidanceQuestion = relatedGuidanceQuestions[i];
                            <tr>
                                <td>@relatedGuidanceQuestion.relatedGuidance</td>
                                <td>@relatedGuidanceQuestion.detailedReference</td>
                                <td>
                                    <select name="answer" value="@relatedGuidanceQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, subCompQuestion: relatedGuidanceQuestion))">
                                        @for (int j = 0; j <= 10; j++)
                                        {
                                            <option value="@j">@j</option>
                                        }
                                    </select>
                                </td>
                                <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(relatedGuidanceQuestion.questionAnswer) == 0 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(relatedGuidanceQuestion.questionAnswer) == 1 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(relatedGuidanceQuestion.questionAnswer) == 2 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(relatedGuidanceQuestion.questionAnswer) == 3 ? "X" : " "
                            )</div></td>
                                <td>@objectiveAuditProvider.calculateAnswerScore(relatedGuidanceQuestion.questionAnswer)</td>
                                <td>
                                    <input type="text" />
                                </td>
                            </tr>
                        }
                    </tbody>
            </table>
        }
    }
    else if (componentID == 3)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateComponentScore(component, false).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Sub-Component</th>
                    <th class="col-12">Regarding the Organisational Structures above. For each management practice, look at the roles and responsibilities diagram according to your organisational context, and select a level of importance/relevance:</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < compQuestions.Count; i++)
                {
                    ComponentQuestionDto compQuestion = compQuestions[i];
                    <tr>
                        <td>@compQuestion.questionType</td>
                        <td>@compQuestion.questionDescription</td>
                        <td>
                            <select name="answer" value="@compQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, compQuestion: compQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(compQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (componentID == 4)
    {
        <div class="row border p-2 p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateSubComponentScore(subCompQuestions).Item3</div>
        </div>

        @if (inputQuestions != null)
            {
                <table class="table table-bordered mt-4">
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>From</th>
                            <th>Importance</th>
                            <th>N (Not achieved)</th>
                            <th>P (Partially achieved)</th>
                            <th>L (Largely achieved)</th>
                            <th>F (Fully achieved)</th>
                            <th>Score</th>
                            <th>Comment</th>
                        </tr>
                    </thead>

                    <tbody>
                        @for (int i = 0; i < inputQuestions.Count; i++)
                        {
                            SubComponentQuestionDto inputQuestion = inputQuestions[i];
                            <tr>
                                <td>@inputQuestion.questionDescription</td>
                                <td>@inputQuestion.inputFrom</td>
                                <td>
                                    <select name="answer" value="@inputQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, subCompQuestion: inputQuestion))">
                                        @for (int j = 0; j <= 10; j++)
                                        {
                                            <option value="@j">@j</option>
                                        }
                                    </select>
                                </td>
                                <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(inputQuestion.questionAnswer) == 0 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(
                                        objectiveAuditProvider.GetAnswerAchievement(inputQuestion.questionAnswer) == 1 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(inputQuestion.questionAnswer) == 2 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(inputQuestion.questionAnswer) == 3 ? "X" : " "
                            )</div></td>
                            <td>@objectiveAuditProvider.calculateAnswerScore(inputQuestion.questionAnswer)</td>
                                <td>
                                    <input type="text" />
                                </td>
                            </tr>
                        }
                    </tbody>
            </table>
        }

        @if (outputQuestions != null)
            {
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>To</th>
                            <th>Importance</th>
                            <th>N (Not achieved)</th>
                            <th>P (Partially achieved)</th>
                            <th>L (Largely achieved)</th>
                            <th>F (Fully achieved)</th>
                            <th>Score</th>
                            <th>Comment</th>
                        </tr>
                    </thead>

                    <tbody>
                        @foreach (SubComponentQuestionDto outputQuestion in outputQuestions)
                        {
                            <tr>
                            <td>@outputQuestion.questionDescription</td>
                            <td>@outputQuestion.outputTo</td>
                                <td>
                                <select name="answer" value="@outputQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, subCompQuestion: outputQuestion))">
                                        @for (int j = 0; j <= 10; j++)
                                        {
                                            <option value="@j">@j</option>
                                        }
                                    </select>
                                </td>
                                <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(
                                        objectiveAuditProvider.GetAnswerAchievement(outputQuestion.questionAnswer) == 0 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(outputQuestion.questionAnswer) == 1 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(
                            objectiveAuditProvider.GetAnswerAchievement(outputQuestion.questionAnswer) == 2 ? "X" : " "
                            )</div></td>
                                <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(
                                        objectiveAuditProvider.GetAnswerAchievement(outputQuestion.questionAnswer) == 3 ? "X" : " "
                            )</div></td>
                            <td>@objectiveAuditProvider.calculateAnswerScore(outputQuestion.questionAnswer)</td>
                                <td>
                                    <input type="text" />
                                </td>
                            </tr>
                        }
                    </tbody>
            </table>
        }
    }
    else if (componentID == 5)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateComponentScore(component, false).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Skills</th>
                    <th>Related Guidance (Standards, frameworks, Compliance Requirements)</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < compQuestions.Count; i++)
                {
                    ComponentQuestionDto compQuestion = compQuestions[i];
                    <tr>
                        <td>@compQuestion.questionSkill</td>
                        <td>@compQuestion.relatedGuidance</td>
                        <td>
                            <select name="answer" value="@compQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, compQuestion: compQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(compQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (componentID == 6)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateComponentScore(component, false).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Relevant policy</th>
                    <th class="col-12">Policy Description</th>
                    <th>Related Reference</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < compQuestions.Count; i++)
                {
                    ComponentQuestionDto compQuestion = compQuestions[i];
                    <tr>
                        <td>@compQuestion.relevantPolicy</td>
                        <td>@compQuestion.policyDescription</td>
                        <td>
                            <select name="answer" value="@compQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, compQuestion: compQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(compQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (componentID == 7)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateComponentScore(component, false).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Key Culture Element</th>
                    <th>Detailed & Related Reference</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < compQuestions.Count; i++)
                {
                    ComponentQuestionDto compQuestion = compQuestions[i];
                    <tr>
                        <td>@compQuestion.keyCultureElement</td>
                        <td>@compQuestion.detailedReference</td>
                        <td>
                            <select name="answer" value="@compQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, compQuestion: compQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(compQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else if (componentID == 8)
    {
        <div class="row border p-2 mt-4">
            @if (subComponentID != -1)
            {
                <div class="col-sm text-center">@subComponent.subComponentCode - @subComponent.subComponentName</div>
            }
            <div class="col-sm text-center">Total: @objectiveAuditProvider.calculateComponentScore(component, false).Item3</div>
        </div>

        <table class="table table-bordered mt-4">
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Importance</th>
                    <th>N (Not achieved)</th>
                    <th>P (Partially achieved)</th>
                    <th>L (Largely achieved)</th>
                    <th>F (Fully achieved)</th>
                    <th>Score</th>
                    <th>Comment</th>
                </tr>
            </thead>

            <tbody>
                @for (int i = 0; i < compQuestions.Count; i++)
                {
                    ComponentQuestionDto compQuestion = compQuestions[i];
                    <tr>
                        <td>@compQuestion.questionDescription</td>
                        <td>
                            <select name="answer" value="@compQuestion.questionAnswer" @onchange="@((e) => updateComponent(e, compQuestion: compQuestion))">
                                @for (int j = 0; j <= 10; j++)
                                {
                                    <option value="@j">@j</option>
                                }
                            </select>
                        </td>
                        <td><div class="bg-danger rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 0 ? "X" : " ")</div></td>
                        <td><div class="bg-warning rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 1 ? "X" : " ")</div></td>
                        <td><div class="bg-success rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 2 ? "X" : " ")</div></td>
                        <td><div class="bg-primary rounded-3 text-center" style="width: 100px; height: 50px;">@(objectiveAuditProvider.GetAnswerAchievement(compQuestion.questionAnswer) == 3 ? "X" : " ")</div></td>
                        <td>@objectiveAuditProvider.calculateAnswerScore(compQuestion.questionAnswer)</td>
                        <td>
                            <input type="text" />
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>